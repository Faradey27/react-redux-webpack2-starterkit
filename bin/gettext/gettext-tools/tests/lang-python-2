#! /bin/sh

# Test of gettext facilities (including plural handling) in the Python
# language.

# Note: This test fails with Python 2.3, 2.4 when an UTF-8 locale is present.
# It looks like a bug in Python's gettext.py. This here is a quick workaround:
UTF8_LOCALE_UNSUPPORTED=yes

tmpfiles=""
trap 'rm -fr $tmpfiles' 1 2 3 15

tmpfiles="$tmpfiles prog2.py"
cat <<\EOF > prog2.py
import sys
import gettext

n = int(sys.argv[1])

gettext.textdomain('prog')
gettext.bindtextdomain('prog', 'l-python-2')

print gettext.gettext("'Your command, please?', asked the waiter.")
print gettext.ngettext("a piece of cake","%(count)d pieces of cake",n) \
      % { 'count': n }
print gettext.gettext("%(oldCurrency)s is replaced by %(newCurrency)s.") \
      % { 'oldCurrency': "FF", 'newCurrency' : "EUR" }
EOF

tmpfiles="$tmpfiles l-python-2-prog.tmp l-python-2-prog.pot"
: ${XGETTEXT=xgettext}
${XGETTEXT} -o l-python-2-prog.tmp --omit-header --no-location prog2.py
test $? = 0 || { rm -fr $tmpfiles; exit 1; }
LC_ALL=C tr -d '\r' < l-python-2-prog.tmp > l-python-2-prog.pot
test $? = 0 || { rm -fr $tmpfiles; exit 1; }

tmpfiles="$tmpfiles l-python-2-prog.ok"
cat <<EOF > l-python-2-prog.ok
msgid "'Your command, please?', asked the waiter."
msgstr ""

#, python-format
msgid "a piece of cake"
msgid_plural "%(count)d pieces of cake"
msgstr[0] ""
msgstr[1] ""

#, python-format
msgid "%(oldCurrency)s is replaced by %(newCurrency)s."
msgstr ""
EOF

: ${DIFF=diff}
${DIFF} l-python-2-prog.ok l-python-2-prog.pot || exit 1

tmpfiles="$tmpfiles l-python-2-fr.po"
cat <<\EOF > l-python-2-fr.po
msgid ""
msgstr ""
"Content-Type: text/plain; charset=ISO-8859-1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

msgid "'Your command, please?', asked the waiter."
msgstr "«Votre commande, s'il vous plait», dit le garçon."

# Les gateaux allemands sont les meilleurs du monde.
#, python-format
msgid "a piece of cake"
msgid_plural "%(count)d pieces of cake"
msgstr[0] "un morceau de gateau"
msgstr[1] "%(count)d morceaux de gateau"

# Reverse the arguments.
#, python-format
msgid "%(oldCurrency)s is replaced by %(newCurrency)s."
msgstr "%(newCurrency)s remplace %(oldCurrency)s."
EOF

tmpfiles="$tmpfiles l-python-2-fr.po.tmp l-python-2-fr.po.new"
: ${MSGMERGE=msgmerge}
${MSGMERGE} -q -o l-python-2-fr.po.tmp l-python-2-fr.po l-python-2-prog.pot
test $? = 0 || { rm -fr $tmpfiles; exit 1; }
LC_ALL=C tr -d '\r' < l-python-2-fr.po.tmp > l-python-2-fr.po.new
test $? = 0 || { rm -fr $tmpfiles; exit 1; }

: ${DIFF=diff}
${DIFF} l-python-2-fr.po l-python-2-fr.po.new || exit 1

tmpfiles="$tmpfiles l-python-2"
test -d l-python-2 || mkdir l-python-2
test -d l-python-2/fr || mkdir l-python-2/fr
test -d l-python-2/fr/LC_MESSAGES || mkdir l-python-2/fr/LC_MESSAGES

: ${MSGFMT=msgfmt}
${MSGFMT} -o l-python-2/fr/LC_MESSAGES/prog.mo l-python-2-fr.po

# Test for presence of python version 2.3 or newer.
(python -V) >/dev/null 2>/dev/null \
  || { echo "Skipping test: python not found"; rm -fr $tmpfiles; exit 77; }
case `python -c 'import sys; print sys.hexversion >= 0x20300F0'` in
  1 | True) ;;
  *) echo "Skipping test: python version too old"; rm -fr $tmpfiles; exit 77;;
esac

tmpfiles="$tmpfiles l-python-2-prog.ok l-python-2-prog.oku l-python-2-prog.out"
: ${DIFF=diff}
cat <<\EOF > l-python-2-prog.ok
«Votre commande, s'il vous plait», dit le garçon.
2 morceaux de gateau
EUR remplace FF.
EOF
cat <<\EOF > l-python-2-prog.oku
Â«Votre commande, s'il vous plaitÂ», dit le garÃ§on.
2 morceaux de gateau
EUR remplace FF.
EOF

: ${LOCALE_FR=fr_FR}
: ${LOCALE_FR_UTF8=fr_FR.UTF-8}
if test $LOCALE_FR != none; then
  LANGUAGE= LC_ALL=$LOCALE_FR python prog2.py 2 > l-python-2-prog.out || exit 1
  ${DIFF} l-python-2-prog.ok l-python-2-prog.out || exit 1
fi
if test -z "$UTF8_LOCALE_UNSUPPORTED"; then
  if test $LOCALE_FR_UTF8 != none; then
    LANGUAGE= LC_ALL=$LOCALE_FR_UTF8 python prog2.py 2 > l-python-2-prog.out || exit 1
    ${DIFF} l-python-2-prog.oku l-python-2-prog.out || exit 1
  fi
  if test $LOCALE_FR = none && test $LOCALE_FR_UTF8 = none; then
    if test -f /usr/bin/localedef; then
      echo "Skipping test: no french locale is installed"
    else
      echo "Skipping test: no french locale is supported"
    fi
    rm -fr $tmpfiles; exit 77
  fi
else
  if test $LOCALE_FR = none; then
    if test -f /usr/bin/localedef; then
      echo "Skipping test: no traditional french locale is installed"
    else
      echo "Skipping test: no traditional french locale is supported"
    fi
    rm -fr $tmpfiles; exit 77
  fi
fi

rm -fr $tmpfiles

exit 0
