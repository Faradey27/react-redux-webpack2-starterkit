#! /bin/sh

# Test of gettext facilities in the GNU smalltalk language.
# Assumes an fr_FR locale is installed.
# Assumes the following packages are installed: smalltalk.

tmpfiles=""
trap 'rm -fr $tmpfiles' 1 2 3 15

tmpfiles="$tmpfiles prog.st"
cat <<\EOF > prog.st
PackageLoader fileInPackage: 'I18N' !

Object subclass: #Main
  instanceVariableNames: ''
  classVariableNames: 'NLS' 
  poolDictionaries: ''
  category: 'L-Smalltalk-Program'
!
!Main methodsFor: 'running'!
run
  | n |
  NLS := I18N Locale default messages domain: 'prog' localeDirectory: 'l-smalltalk'.
  n := 2.
  Transcript showCr:
    (NLS ? '''Your command, please?'', asked the waiter.').
  Transcript showCr:
    ((NLS at: 'a piece of cake' plural: '%1 pieces of cake' with: n) bindWith: n).
  Transcript showCr:
    ((NLS ? '%1 is replaced by %2.') bindWith: 'FF' with: 'EUR').!
!

Main new run!
EOF

tmpfiles="$tmpfiles l-smalltalk-prog.tmp l-smalltalk-prog.pot"
: ${XGETTEXT=xgettext}
${XGETTEXT} -o l-smalltalk-prog.tmp --omit-header --no-location prog.st
test $? = 0 || { rm -fr $tmpfiles; exit 1; }
LC_ALL=C tr -d '\r' < l-smalltalk-prog.tmp > l-smalltalk-prog.pot
test $? = 0 || { rm -fr $tmpfiles; exit 1; }

tmpfiles="$tmpfiles l-smalltalk-prog.ok"
cat <<EOF > l-smalltalk-prog.ok
msgid "'Your command, please?', asked the waiter."
msgstr ""

#, smalltalk-format
msgid "a piece of cake"
msgid_plural "%1 pieces of cake"
msgstr[0] ""
msgstr[1] ""

#, smalltalk-format
msgid "%1 is replaced by %2."
msgstr ""
EOF

: ${DIFF=diff}
${DIFF} l-smalltalk-prog.ok l-smalltalk-prog.pot || exit 1

tmpfiles="$tmpfiles l-smalltalk-fr.po"
cat <<\EOF > l-smalltalk-fr.po
msgid ""
msgstr ""
"Content-Type: text/plain; charset=ISO-8859-1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

msgid "'Your command, please?', asked the waiter."
msgstr "«Votre commande, s'il vous plait», dit le garçon."

# Les gateaux allemands sont les meilleurs du monde.
#, smalltalk-format
msgid "a piece of cake"
msgid_plural "%1 pieces of cake"
msgstr[0] "un morceau de gateau"
msgstr[1] "%1 morceaux de gateau"

# Reverse the arguments.
#, smalltalk-format
msgid "%1 is replaced by %2."
msgstr "%2 remplace %1."
EOF

tmpfiles="$tmpfiles l-smalltalk-fr.po.tmp l-smalltalk-fr.po.new"
: ${MSGMERGE=msgmerge}
${MSGMERGE} -q -o l-smalltalk-fr.po.tmp l-smalltalk-fr.po l-smalltalk-prog.pot
test $? = 0 || { rm -fr $tmpfiles; exit 1; }
LC_ALL=C tr -d '\r' < l-smalltalk-fr.po.tmp > l-smalltalk-fr.po.new
test $? = 0 || { rm -fr $tmpfiles; exit 1; }

: ${DIFF=diff}
${DIFF} l-smalltalk-fr.po l-smalltalk-fr.po.new || exit 1

tmpfiles="$tmpfiles l-smalltalk"
test -d l-smalltalk || mkdir l-smalltalk
test -d l-smalltalk/fr || mkdir l-smalltalk/fr
test -d l-smalltalk/fr/LC_MESSAGES || mkdir l-smalltalk/fr/LC_MESSAGES

: ${MSGFMT=msgfmt}
${MSGFMT} -o l-smalltalk/fr/LC_MESSAGES/prog.mo l-smalltalk-fr.po

# Test for presence of gst version 2.0.6 or newer.
(gst --version) >/dev/null 2>/dev/null \
  || { echo "Skipping test: gst not found"; rm -fr $tmpfiles; exit 77; }
case `gst --version | sed -n -e 1p | sed -e 's/^[^0-9]*//'` in
  0.* | 1.* | 2.0 | 2.0.[0-5] | 2.1 | 2.1.[0-1])
    echo "Skipping test: gst version too old"; rm -fr $tmpfiles; exit 77;;
esac

tmpfiles="$tmpfiles l-smalltalk-prog.ok l-smalltalk-prog.oku l-smalltalk-prog.ok2 l-smalltalk-prog.oku2 l-smalltalk-prog.ok3 l-smalltalk-prog.oku3 l-smalltalk-prog.out"
: ${DIFF=diff}
cat <<\EOF > l-smalltalk-prog.ok
«Votre commande, s'il vous plait», dit le garçon.
2 morceaux de gateau
EUR remplace FF.
EOF
cat <<\EOF > l-smalltalk-prog.oku
Â«Votre commande, s'il vous plaitÂ», dit le garÃ§on.
2 morceaux de gateau
EUR remplace FF.
EOF
# gst versions older than 2.3 also print "Loading package I18N".
{ echo 'Loading package I18N'; cat l-smalltalk-prog.ok; } > l-smalltalk-prog.ok2
{ echo 'Loading package I18N'; cat l-smalltalk-prog.oku; } > l-smalltalk-prog.oku2
# gst version 3.0.3 also prints "Loading package Iconv" and
# "Loading package I18N".
{ echo 'Loading package Iconv'; echo 'Loading package I18N'; cat l-smalltalk-prog.ok; } > l-smalltalk-prog.ok3
{ echo 'Loading package Iconv'; echo 'Loading package I18N'; cat l-smalltalk-prog.oku; } > l-smalltalk-prog.oku3

: ${LOCALE_FR=fr_FR}
: ${LOCALE_FR_UTF8=fr_FR.UTF-8}
if test $LOCALE_FR != none; then
  LANGUAGE= LC_ALL=$LOCALE_FR gst -Q prog.st > l-smalltalk-prog.out || exit 1
  ${DIFF} l-smalltalk-prog.ok l-smalltalk-prog.out > /dev/null ||
    ${DIFF} l-smalltalk-prog.ok2 l-smalltalk-prog.out > /dev/null ||
      ${DIFF} l-smalltalk-prog.ok3 l-smalltalk-prog.out > /dev/null ||
        { ${DIFF} l-smalltalk-prog.ok l-smalltalk-prog.out; exit 1; }
fi
if test $LOCALE_FR_UTF8 != none; then
  LANGUAGE= LC_ALL=$LOCALE_FR_UTF8 gst -Q prog.st > l-smalltalk-prog.out || exit 1
  ${DIFF} l-smalltalk-prog.oku l-smalltalk-prog.out > /dev/null ||
    ${DIFF} l-smalltalk-prog.oku2 l-smalltalk-prog.out > /dev/null ||
      ${DIFF} l-smalltalk-prog.oku3 l-smalltalk-prog.out > /dev/null ||
        { ${DIFF} l-smalltalk-prog.oku l-smalltalk-prog.out; exit 1; }
fi
if test $LOCALE_FR = none && test $LOCALE_FR_UTF8 = none; then
  if test -f /usr/bin/localedef; then
    echo "Skipping test: no french locale is installed"
  else
    echo "Skipping test: no french locale is supported"
  fi
  rm -fr $tmpfiles; exit 77
fi

rm -fr $tmpfiles

exit 0
